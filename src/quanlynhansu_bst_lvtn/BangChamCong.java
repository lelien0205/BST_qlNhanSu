/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanlynhansu_bst_lvtn;

import BST.*;
import Objects.*;
import java.math.BigDecimal;
import java.sql.*;
import java.time.LocalDate;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author itsHuaan
 */
public class BangChamCong extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyChamCong
     */
    Luong oldLuong;
    ChamCong oldChamCong;
    public static String maNhanVien;
    Connection connection;
    int thang;
    int nam;

    public BangChamCong() {
        initComponents();
        GenericClass.loadCombobox((DefaultComboBoxModel) jComboBox_thang.getModel(), 1, 12);
        GenericClass.loadCombobox((DefaultComboBoxModel) jComboBox_nam.getModel(), LocalDate.now().getYear() - 50, LocalDate.now().getYear());
        try {
            connection = DBConnector.connect();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        GenericClass.centerOnScreen(this);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_dsChamCong = new javax.swing.JTable();
        jTextField_maChamCong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox_thang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_nam = new javax.swing.JComboBox<>();
        jTextField_soNgayLamViec = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_thaoTac = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bảng chấm công");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable_dsChamCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã chấm công", "", "Tháng ", "Năm", "Số ngày làm việc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_dsChamCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_dsChamCongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_dsChamCong);
        if (jTable_dsChamCong.getColumnModel().getColumnCount() > 0) {
            jTable_dsChamCong.getColumnModel().getColumn(0).setResizable(false);
            jTable_dsChamCong.getColumnModel().getColumn(1).setMinWidth(0);
            jTable_dsChamCong.getColumnModel().getColumn(1).setPreferredWidth(0);
            jTable_dsChamCong.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable_dsChamCong.getColumnModel().getColumn(2).setResizable(false);
            jTable_dsChamCong.getColumnModel().getColumn(3).setResizable(false);
            jTable_dsChamCong.getColumnModel().getColumn(4).setResizable(false);
        }

        jTextField_maChamCong.setEditable(false);
        jTextField_maChamCong.setFocusable(false);

        jLabel3.setText("Mã chấm công:");

        jLabel1.setText("Tháng:");

        jLabel2.setText("Năm:");

        jTextField_soNgayLamViec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_soNgayLamViecKeyTyped(evt);
            }
        });

        jLabel5.setText("Số ngày làm việc:");

        jComboBox_thaoTac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cập nhật", "Xóa" }));
        jComboBox_thaoTac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_thaoTacActionPerformed(evt);
            }
        });

        jLabel7.setText("Thao tác:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(35, 35, 35))
                            .addComponent(jTextField_maChamCong))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_thang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(64, 64, 64)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(71, 71, 71))
                            .addComponent(jComboBox_nam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_soNgayLamViec)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33)))
                        .addGap(169, 169, 169)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_thaoTac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(34, 34, 34)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextField_soNgayLamViec)
                    .addComponent(jComboBox_nam)
                    .addComponent(jComboBox_thang)
                    .addComponent(jTextField_maChamCong)
                    .addComponent(jComboBox_thaoTac))
                .addGap(25, 25, 25))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetInput() {
        jTextField_maChamCong.setText(null);
        jComboBox_thang.setSelectedIndex(0);
        jComboBox_nam.setSelectedIndex(0);
        jTextField_soNgayLamViec.setText(null);
        jComboBox_thaoTac.setSelectedIndex(0);
    }
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        maNhanVien = null;
        if (!GenericClass.isQuanLy) {
            HoSoNhanVien hoSoNhanVien = new HoSoNhanVien();
            hoSoNhanVien.setVisible(true);
        } else {
            GenericClass.isQuanLy = false;
            QuanLyChamCong quanLyChamCong = new QuanLyChamCong();
            quanLyChamCong.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosed

    private double tinhLuong(double heSoLuong, int soNgayLamViec, double heSoPhuCap) {
        double tienPhat = 0.0;
        if (soNgayLamViec < 20) {
            tienPhat = (20 - soNgayLamViec) * 500;
        }
        return (heSoLuong * 1500000 + soNgayLamViec * 200000 * heSoPhuCap) - tienPhat;
    }

    private String getMaLuong() {
        return (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select MaLuong from Luong where MaNhanVien = '" + maNhanVien + "' and Thang = " + thang + " and Nam = " + nam + ""));
    }

    private void modifyLuong(String query) {
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra\nVui lòng thử lại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        jComboBox_thang.setSelectedItem(LocalDate.now().getMonthValue());
        jComboBox_nam.setSelectedItem(LocalDate.now().getYear());
        loadData(jTable_dsChamCong);
        GenericClass.tableFilter(jTable_dsChamCong, 0, maNhanVien, SortOrder.ASCENDING);
    }//GEN-LAST:event_formWindowActivated

    private void jTextField_soNgayLamViecKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_soNgayLamViecKeyTyped
        // TODO add your handling code here:
        GenericClass.numbersOnly(evt);
    }//GEN-LAST:event_jTextField_soNgayLamViecKeyTyped

    private void jComboBox_thaoTacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_thaoTacActionPerformed
        // TODO add your handling code here:
        if (jComboBox_thaoTac.getSelectedIndex() == 0) {
            if (jTextField_maChamCong.getText().isEmpty() || jTextField_soNgayLamViec.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập đủ dữ liệu\nVui lòng kiểm tra lại", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                String maChamCong = jTextField_maChamCong.getText();
                int _thang = Integer.parseInt(jComboBox_thang.getSelectedItem().toString());
                int _nam = Integer.parseInt(jComboBox_nam.getSelectedItem().toString());
                int _soNgayLamViec = Integer.parseInt(jTextField_soNgayLamViec.getText());

                // Kiểm tra năm nhuận
                boolean isLeapYear = GenericClass.isLeapYear(_nam);

                if ((thang == 2 && isLeapYear && _soNgayLamViec > 29)
                        || (thang == 2 && !isLeapYear && _soNgayLamViec > 28)
                        || ((thang == 4 || thang == 6 || thang == 9 || thang == 11) && _soNgayLamViec > 30)
                        || (_soNgayLamViec > 31)) {
                    JOptionPane.showMessageDialog(this, "Số ngày làm việc không hợp lệ cho tháng và năm đã chọn", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    MyTrees.chamCongTree.modifyData(oldChamCong, new ChamCong(maChamCong, maNhanVien, _thang, _nam, _soNgayLamViec));
                    GenericClass.modifyDB(connection, "update ChamCong set Thang = " + _thang + ", Nam = " + _nam + ", SoNgayLamViec = " + _soNgayLamViec + " where MaChamCong = '" + maChamCong + "'", this, "Cập nhật dữ liệu thành công!");
                    BigDecimal heSoPhuCap = (BigDecimal) GenericClass.getParameter(GenericClass.getResultSet(connection, "select cv.HeSoPhuCap from NhanVien nv join ChucVu cv on nv.MaChucVu = cv.MaChucVu where nv.MaNhanVien = '" + maNhanVien + "'"));
                    BigDecimal heSoLuong = (BigDecimal) GenericClass.getParameter(GenericClass.getResultSet(connection, "select HeSoLuong from NhanVien where MaNhanVien = '" + maNhanVien + "'"));
                    double luong = tinhLuong(heSoLuong.doubleValue(), _soNgayLamViec, heSoPhuCap.doubleValue());
                    MyTrees.luongTree.modifyData(oldLuong, new Luong(getMaLuong(), maNhanVien, _thang, _nam, luong));
                    modifyLuong("update Luong set Thang = " + _thang + ", Nam = " + _nam + ", Luong = " + luong + " where MaLuong = '" + getMaLuong() + "'");
                }
            }
            resetInput();
        } else {
            if (jTextField_maChamCong.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một đối tượng để thực hiện", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                int luaChon = JOptionPane.showConfirmDialog(
                        this,
                        "Bạn có chắc chắn muốn xóa chấm công \ntháng " + oldChamCong.getThang() + "/" + oldChamCong.getNam() + " của nhân viên " + (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select HoTen from NhanVien where MaNhanVien = '" + maNhanVien + "'")) + "?",
                        "Xác nhận",
                        JOptionPane.YES_NO_OPTION);

                // Kiểm tra xem người dùng đã chọn Yes hay No
                if (luaChon == JOptionPane.YES_OPTION) {
                    MyTrees.chamCongTree.delete(oldChamCong);
                    MyTrees.luongTree.delete(oldLuong);
                    modifyLuong("delete from Luong where MaLuong = '" + getMaLuong() + "'");
                    GenericClass.modifyDB(connection, "delete from ChamCong where MaChamCong = '" + jTextField_maChamCong.getText() + "'", this, "Xóa dữ liệu thành công!");
                }
            }
            resetInput();
        }
    }//GEN-LAST:event_jComboBox_thaoTacActionPerformed

    private void jTable_dsChamCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_dsChamCongMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable_dsChamCong.getSelectedRow();
        jTextField_maChamCong.setText(jTable_dsChamCong.getValueAt(selectedRow, 0).toString());
        jComboBox_thang.setSelectedItem(jTable_dsChamCong.getValueAt(selectedRow, 2));
        jComboBox_nam.setSelectedItem(jTable_dsChamCong.getValueAt(selectedRow, 3));
        jTextField_soNgayLamViec.setText(jTable_dsChamCong.getValueAt(selectedRow, 4).toString());
        thang = Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 2).toString());
        nam = Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 3).toString());
//        soNgayLamViec = Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 4).toString());
        ResultSet resultSet = GenericClass.getResultSet(connection, "select * from Luong where MaLuong = '" + getMaLuong() + "'");
        try {
            while (resultSet.next()) {
                oldLuong = new Luong(getMaLuong(), resultSet.getString("MaNhanVien"), resultSet.getInt("Thang"), resultSet.getInt("Nam"), resultSet.getDouble("Luong"));
            }
        } catch (Exception e) {
        }
        oldChamCong = new ChamCong(jTable_dsChamCong.getValueAt(selectedRow, 0).toString(), maNhanVien, Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 2).toString()), Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 3).toString()), Integer.parseInt(jTable_dsChamCong.getValueAt(selectedRow, 4).toString()));
    }//GEN-LAST:event_jTable_dsChamCongMouseClicked

    private void loadData(JTable jTable) {
        GenericClass.addObjectsToTable(jTable, 3, SortOrder.ASCENDING);
        GenericClass.getTreeData(MyTrees.chamCongTree.root, (DefaultTableModel) jTable.getModel(), (ChamCong) -> new Object[]{ChamCong.getMaChamCong(), ChamCong.getMaNhanVien(), ChamCong.getThang(), ChamCong.getNam(), ChamCong.getSoNgayLamViec()});
        this.setTitle("Bảng chấm công nhân viên " + (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select HoTen from NhanVien where MaNhanVien = '" + maNhanVien + "'")));
        if (GenericClass.isQuanLy) {
            this.setSize(803, 571);
            GenericClass.centerOnScreen(this);
        } else {
            this.setSize(803, 486);
        }
//System.out.println(this.getSize().toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BangChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BangChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BangChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BangChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BangChamCong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox_nam;
    private javax.swing.JComboBox<String> jComboBox_thang;
    private javax.swing.JComboBox<String> jComboBox_thaoTac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_dsChamCong;
    private javax.swing.JTextField jTextField_maChamCong;
    private javax.swing.JTextField jTextField_soNgayLamViec;
    // End of variables declaration//GEN-END:variables
}
