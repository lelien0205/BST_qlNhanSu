/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanlynhansu_bst_lvtn;

import java.time.LocalDate;
import javax.swing.*;
import Objects.*;
import BST.*;
import java.math.BigDecimal;
import javax.swing.table.*;
import java.sql.*;
import java.text.Collator;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Locale;
import javax.swing.border.TitledBorder;

/**
 *
 * @author itsHuaan
 */
public class BaoCaoThongKe extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyChamCong
     */
    TrangChu trangChu = new TrangChu();
    Connection connection;

    public BaoCaoThongKe() {
        initComponents();
        try {
            connection = DBConnector.connect();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        GenericClass.loadCombobox((DefaultComboBoxModel) jComboBox_thang.getModel(), 1, 12);
        GenericClass.loadCombobox((DefaultComboBoxModel) jComboBox_nam.getModel(), LocalDate.now().getYear() - 50, LocalDate.now().getYear());
        GenericClass.loadComboboxFromTree(MyTrees.phongTree.root, (DefaultComboBoxModel) jComboBox_phong.getModel(), Phong::getMaPhong);
        jComboBox_thang.setSelectedItem(LocalDate.now().getMonthValue());
        jComboBox_nam.setSelectedItem(LocalDate.now().getYear());
        GenericClass.centerOnScreen(this);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane_baoCaoThongKe = new javax.swing.JTabbedPane();
        jPanel_thongKeLuong = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_dsLuong = new javax.swing.JTable();
        jTextField_tongLuong = new javax.swing.JTextField();
        jLabel_tongLuong = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_nam = new javax.swing.JComboBox<>();
        jButton_exportSalaryToExcel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_thang = new javax.swing.JComboBox<>();
        jPanel_thongKeNhanVien = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_dsNhanVien = new javax.swing.JTable();
        jLabel_soLuongNhanVien = new javax.swing.JLabel();
        jComboBox_phong = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField_soLuongNhanVien = new javax.swing.JTextField();
        jButton_exportEmployeesToExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Báo cáo thống kê");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel_thongKeLuong.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTable_dsLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lương", "Mã nhân viên", "Họ tên", "Tháng", "Năm", "Lương", "Thuế TNCN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_dsLuong);
        if (jTable_dsLuong.getColumnModel().getColumnCount() > 0) {
            jTable_dsLuong.getColumnModel().getColumn(0).setResizable(false);
            jTable_dsLuong.getColumnModel().getColumn(1).setResizable(false);
            jTable_dsLuong.getColumnModel().getColumn(2).setResizable(false);
            jTable_dsLuong.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_dsLuong.getColumnModel().getColumn(3).setResizable(false);
            jTable_dsLuong.getColumnModel().getColumn(3).setPreferredWidth(40);
            jTable_dsLuong.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTable_dsLuong.getColumnModel().getColumn(5).setResizable(false);
        }

        jTextField_tongLuong.setEditable(false);
        jTextField_tongLuong.setFocusable(false);

        jLabel_tongLuong.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_tongLuong.setText("Tổng lương năm 0000:");
        jLabel_tongLuong.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel2.setText("Năm:");

        jComboBox_nam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_namActionPerformed(evt);
            }
        });

        jButton_exportSalaryToExcel.setText("Xuất Excel");
        jButton_exportSalaryToExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exportSalaryToExcelActionPerformed(evt);
            }
        });

        jLabel4.setText("Tháng:");

        jComboBox_thang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_thangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_thongKeLuongLayout = new javax.swing.GroupLayout(jPanel_thongKeLuong);
        jPanel_thongKeLuong.setLayout(jPanel_thongKeLuongLayout);
        jPanel_thongKeLuongLayout.setHorizontalGroup(
            jPanel_thongKeLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_thongKeLuongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_thongKeLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE)
                    .addGroup(jPanel_thongKeLuongLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_thang, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_nam, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_exportSalaryToExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_tongLuong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_tongLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel_thongKeLuongLayout.setVerticalGroup(
            jPanel_thongKeLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_thongKeLuongLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_thongKeLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_tongLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_tongLuong)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_exportSalaryToExcel)
                    .addGroup(jPanel_thongKeLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox_thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane_baoCaoThongKe.addTab("Thống kê lương", jPanel_thongKeLuong);

        jPanel_thongKeNhanVien.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTable_dsNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Quê quán", "Mã phòng", "Mã chức vụ", "Mật khẩu", "Loại người dùng", "Hệ số lương"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_dsNhanVien);
        if (jTable_dsNhanVien.getColumnModel().getColumnCount() > 0) {
            jTable_dsNhanVien.getColumnModel().getColumn(0).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_dsNhanVien.getColumnModel().getColumn(1).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable_dsNhanVien.getColumnModel().getColumn(2).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(2).setPreferredWidth(30);
            jTable_dsNhanVien.getColumnModel().getColumn(3).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(3).setPreferredWidth(40);
            jTable_dsNhanVien.getColumnModel().getColumn(4).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(4).setPreferredWidth(130);
            jTable_dsNhanVien.getColumnModel().getColumn(5).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(6).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(7).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTable_dsNhanVien.getColumnModel().getColumn(8).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(8).setPreferredWidth(50);
            jTable_dsNhanVien.getColumnModel().getColumn(9).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(10).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(10).setPreferredWidth(30);
            jTable_dsNhanVien.getColumnModel().getColumn(11).setResizable(false);
            jTable_dsNhanVien.getColumnModel().getColumn(11).setPreferredWidth(30);
        }

        jLabel_soLuongNhanVien.setText("Số lượng nhân viên: ");

        jComboBox_phong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_phongActionPerformed(evt);
            }
        });

        jLabel3.setText("Phòng:");

        jButton_exportEmployeesToExcel.setText("Xuất Excel");
        jButton_exportEmployeesToExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exportEmployeesToExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_thongKeNhanVienLayout = new javax.swing.GroupLayout(jPanel_thongKeNhanVien);
        jPanel_thongKeNhanVien.setLayout(jPanel_thongKeNhanVienLayout);
        jPanel_thongKeNhanVienLayout.setHorizontalGroup(
            jPanel_thongKeNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_thongKeNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_thongKeNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE)
                    .addGroup(jPanel_thongKeNhanVienLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_phong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_exportEmployeesToExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_soLuongNhanVien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_soLuongNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel_thongKeNhanVienLayout.setVerticalGroup(
            jPanel_thongKeNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_thongKeNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_thongKeNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_phong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_soLuongNhanVien)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_soLuongNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_exportEmployeesToExcel))
                .addContainerGap())
        );

        jTabbedPane_baoCaoThongKe.addTab("Thống kê nhân viên", jPanel_thongKeNhanVien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane_baoCaoThongKe)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane_baoCaoThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        trangChu.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable_dsNhanVien.getModel();
        loadLuongData(jTable_dsLuong);
        model.setRowCount(0);
        loadNhanVienData(jTable_dsNhanVien);
    }//GEN-LAST:event_formWindowActivated

    private void jButton_exportSalaryToExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exportSalaryToExcelActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.showSaveDialog(this);
        GenericClass.exportToExcel(jFileChooser, jTable_dsLuong, jComboBox_thang.getSelectedItem().toString() + "-" + jComboBox_nam.getSelectedItem().toString(), "Bảng lương tháng " + jComboBox_thang.getSelectedItem().toString() + "-" + jComboBox_nam.getSelectedItem().toString());
    }//GEN-LAST:event_jButton_exportSalaryToExcelActionPerformed

    private void jComboBox_namActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_namActionPerformed
        // TODO add your handling code here:
        String query = "SELECT SUM(Luong) FROM luong WHERE Thang = " + jComboBox_thang.getSelectedItem().toString() + " AND Nam = " + jComboBox_nam.getSelectedItem().toString();
        tableFilter(jTable_dsLuong, 3, 4, Integer.parseInt(jComboBox_thang.getSelectedItem().toString()), Integer.parseInt(jComboBox_nam.getSelectedItem().toString()), SortOrder.UNSORTED);
        jLabel_tongLuong.setText("Tổng lương tháng " + jComboBox_thang.getSelectedItem().toString() + "/" + jComboBox_nam.getSelectedItem().toString() + ": ");
        ((TitledBorder) jPanel_thongKeLuong.getBorder()).setTitle("Bảng lương tháng " + jComboBox_thang.getSelectedItem().toString() + "/" + jComboBox_nam.getSelectedItem().toString());
        jPanel_thongKeLuong.repaint();
        jTextField_tongLuong.setText(tongLuong(query).toString() + "₫");
    }//GEN-LAST:event_jComboBox_namActionPerformed

    private int countEmployees(JTable jTable) {
        int numbersOfEmployees = 0;
        for (int i = 0; i < jTable.getRowCount(); i++) {
            if (jTable.getValueAt(i, 7).toString().equalsIgnoreCase(jComboBox_phong.getSelectedItem().toString())) {
                numbersOfEmployees++;
            }
        }
        return numbersOfEmployees;
    }

    private void jComboBox_phongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_phongActionPerformed
        // TODO add your handling code here:
        String phong = (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select TenPhong from Phong where MaPhong = '" + jComboBox_phong.getSelectedItem().toString() + "'"));
        sortTableByLastName(jTable_dsNhanVien, 1, SortOrder.ASCENDING, jComboBox_phong.getSelectedItem().toString());
        ((TitledBorder) jPanel_thongKeNhanVien.getBorder()).setTitle("Danh sách nhân viên phòng " + phong);
        jPanel_thongKeNhanVien.repaint();
        jLabel_soLuongNhanVien.setText("Số lượng nhân viên phòng " + phong);
        jTextField_soLuongNhanVien.setText(Integer.toString(countEmployees(jTable_dsNhanVien)));
    }//GEN-LAST:event_jComboBox_phongActionPerformed

    private void jButton_exportEmployeesToExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exportEmployeesToExcelActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.showSaveDialog(this);
        String phong = (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select TenPhong from Phong where MaPhong = '" + jComboBox_phong.getSelectedItem().toString() + "'"));
        GenericClass.exportToExcel(jFileChooser, jTable_dsNhanVien, "Danh sách nhân viên phòng " + phong, "Danh sách nhân viên phòng " + phong);
    }//GEN-LAST:event_jButton_exportEmployeesToExcelActionPerformed

    private void jComboBox_thangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_thangActionPerformed
        // TODO add your handling code here:
        if (jComboBox_thang.getSelectedItem() != null && jComboBox_nam.getSelectedItem() != null) {
            jComboBox_namActionPerformed(evt);
        }
    }//GEN-LAST:event_jComboBox_thangActionPerformed
    private void sortTableByLastName(JTable jTable, int column, SortOrder sortOrder, String regex) {
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        Comparator<Object> lastNameComparator = (obj1, obj2) -> {
            String fullName1 = obj1.toString();
            String fullName2 = obj2.toString();
            String[] words1 = fullName1.split("\\s");
            String[] words2 = fullName2.split("\\s");
            String lastName1 = words1.length > 1 ? words1[words1.length - 1] : words1[0];
            String lastName2 = words2.length > 1 ? words2[words2.length - 1] : words2[0];
            Collator collator = Collator.getInstance(new Locale("vi", "VN"));
            return collator.compare(lastName1, lastName2);
        };
        sorter.setComparator(column, lastNameComparator);
        sorter.setSortable(column, true);
        sorter.setSortKeys(java.util.List.of(new RowSorter.SortKey(column, sortOrder)));
        sorter.setRowFilter(RowFilter.regexFilter("\\b" + regex + "\\b"));
        jTable.setRowSorter(sorter);
    }

    private void loadNhanVienData(JTable jTable) {
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        GenericClass.getTreeData(MyTrees.nhanVienTree.root,
                (DefaultTableModel) jTable.getModel(),
                (NhanVien) -> new Object[]{
                    NhanVien.getMaNhanVien(),
                    NhanVien.getHoTen(),
                    NhanVien.getGioiTinh(),
                    NhanVien.getNgaySinh(),
                    NhanVien.getDiaChi(),
                    NhanVien.getSoDienThoai(),
                    NhanVien.getQueQuan(),
                    NhanVien.getMaPhong(),
                    NhanVien.getMaChucVu(),
                    NhanVien.getMatKhau(),
                    NhanVien.isLoaiNguoiDung(),
                    NhanVien.getHeSoLuong()
                }
        );
        sortTableByLastName(jTable, 1, SortOrder.ASCENDING, jComboBox_phong.getSelectedItem().toString());
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 10).toString().equalsIgnoreCase("true")) {
                model.setValueAt("Quản lý", i, 10);
            } else {
                model.setValueAt("Nhân viên", i, 10);
            }
        }
        GenericClass.encryptPassword(jTable, 9);
        jLabel_soLuongNhanVien.setText("Số lượng nhân viên phòng " + (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select TenPhong from Phong where MaPhong = '" + jComboBox_phong.getSelectedItem().toString() + "'")) + ": ");
        jTextField_soLuongNhanVien.setText(Integer.toString(countEmployees(jTable_dsNhanVien)));
    }

    private void loadLuongData(JTable jTable) {
        jComboBox_thang.setSelectedItem(LocalDate.now().getMonthValue());
        jComboBox_nam.setSelectedItem(LocalDate.now().getYear());
        String query = "SELECT SUM(Luong) FROM luong WHERE Thang = " + jComboBox_thang.getSelectedItem().toString() + " AND Nam = " + jComboBox_nam.getSelectedItem().toString();
        GenericClass.addObjectsToTable(jTable, 3, SortOrder.ASCENDING);
        GenericClass.getTreeData(MyTrees.luongTree.root, (DefaultTableModel) jTable.getModel(), (Luong) -> new Object[]{Luong.getMaLuong(), Luong.getMaNhanVien(), "", Luong.getThang(), Luong.getNam(), (int) Luong.getLuong()});
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String hoTen = (String) GenericClass.getParameter(GenericClass.getResultSet(connection, "select Hoten from NhanVien where MaNhanVien = '" + model.getValueAt(i, 1).toString() + "'"));
            model.setValueAt(hoTen, i, 2);
        }
//        GenericClass.tableFilter(jTable, 3, jComboBox_nam.getSelectedItem().toString(), SortOrder.ASCENDING);
        tableFilter(jTable, 3, 4, Integer.parseInt(jComboBox_thang.getSelectedItem().toString()), Integer.parseInt(jComboBox_nam.getSelectedItem().toString()), SortOrder.UNSORTED);
        jTextField_tongLuong.setText(tongLuong(query).toString() + "₫");
        ((TitledBorder) jPanel_thongKeLuong.getBorder()).setTitle("Bảng lương tháng " + jComboBox_thang.getSelectedItem().toString() + "/" + jComboBox_nam.getSelectedItem().toString());
        GenericClass.tinhThue(jTable, 5);
    }

    public static void tableFilter(JTable jTable, int thangColumnIndex, int namColumnIndex, int thang, int nam, SortOrder sortOrder) {
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        jTable.setRowSorter(sorter);

        RowFilter<Object, Object> rowFilter = new RowFilter<Object, Object>() {
            public boolean include(Entry<? extends Object, ? extends Object> entry) {
                int entryThang = (Integer) entry.getValue(thangColumnIndex);
                int entryNam = (Integer) entry.getValue(namColumnIndex);
                return entryThang == thang && entryNam == nam;
            }
        };

        sorter.setRowFilter(rowFilter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(thangColumnIndex, sortOrder)));
    }

    String tongLuong(String query) {
        BigDecimal tongLuongBigDecimal = new BigDecimal(0);
        tongLuongBigDecimal = (BigDecimal) GenericClass.getParameter(GenericClass.getResultSet(connection, query));
        String tongLuongStr = "0";
        if (tongLuongBigDecimal != null) {
            tongLuongStr = tongLuongBigDecimal.toString();
        }
        return tongLuongStr;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaoCaoThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaoCaoThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaoCaoThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaoCaoThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaoCaoThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_exportEmployeesToExcel;
    private javax.swing.JButton jButton_exportSalaryToExcel;
    private javax.swing.JComboBox<String> jComboBox_nam;
    private javax.swing.JComboBox<String> jComboBox_phong;
    private javax.swing.JComboBox<String> jComboBox_thang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_soLuongNhanVien;
    private javax.swing.JLabel jLabel_tongLuong;
    private javax.swing.JPanel jPanel_thongKeLuong;
    private javax.swing.JPanel jPanel_thongKeNhanVien;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane_baoCaoThongKe;
    private javax.swing.JTable jTable_dsLuong;
    private javax.swing.JTable jTable_dsNhanVien;
    private javax.swing.JTextField jTextField_soLuongNhanVien;
    private javax.swing.JTextField jTextField_tongLuong;
    // End of variables declaration//GEN-END:variables
}
